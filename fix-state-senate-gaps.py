import io
import sys
import csv
import operator
import itertools

data = '''cycle	stateabrev
1974	AL
1978	AL
1986	AL
1990	AL
1994	AL
1998	AL
2006	AL
2010	AL
1974	AR
1976	AR
1978	AR
1980	AR
1984	AR
1988	AR
1990	AR
1994	AR
1996	AR
1998	AR
2000	AR
2004	AR
2006	AR
2008	AR
2010	AR
2014	AR
2016	AR
2018	AR
1974	AZ
1976	AZ
1978	AZ
1980	AZ
1984	AZ
1986	AZ
1988	AZ
1990	AZ
1994	AZ
1996	AZ
1998	AZ
2000	AZ
2004	AZ
2006	AZ
2008	AZ
2010	AZ
2014	AZ
2016	AZ
2018	AZ
1974	CA
1976	CA
1978	CA
1980	CA
1986	CA
1988	CA
1990	CA
1994	CA
1996	CA
1998	CA
2000	CA
2004	CA
2006	CA
2008	CA
2010	CA
2014	CA
2016	CA
2018	CA
1974	CO
1976	CO
1978	CO
1980	CO
1984	CO
1986	CO
1988	CO
1990	CO
1994	CO
1996	CO
1998	CO
2000	CO
2004	CO
2006	CO
2008	CO
2010	CO
2014	CO
2016	CO
2018	CO
1974	CT
1976	CT
1978	CT
1980	CT
1984	CT
1986	CT
1988	CT
1990	CT
1994	CT
1996	CT
1998	CT
2000	CT
2004	CT
2006	CT
2008	CT
2010	CT
2014	CT
2016	CT
2018	CT
1974	DE
1976	DE
1978	DE
1980	DE
1984	DE
1986	DE
1988	DE
1990	DE
1994	DE
1996	DE
1998	DE
2000	DE
2004	DE
2006	DE
2008	DE
2010	DE
2014	DE
2016	DE
2018	DE
1984	FL
1986	FL
1988	FL
1990	FL
1994	FL
1996	FL
1998	FL
2000	FL
2004	FL
2006	FL
2008	FL
2010	FL
2014	FL
2016	FL
2018	FL
1974	GA
1976	GA
1978	GA
1980	GA
1984	GA
1986	GA
1988	GA
1990	GA
1994	GA
1996	GA
1998	GA
2000	GA
2006	GA
2008	GA
2010	GA
2014	GA
2018	GA
1994	HI
1996	HI
1998	HI
2000	HI
2004	HI
2006	HI
2008	HI
2010	HI
2014	HI
2016	HI
2018	HI
1974	IA
1976	IA
1978	IA
1980	IA
1984	IA
1986	IA
1988	IA
1990	IA
1994	IA
1996	IA
1998	IA
2000	IA
2004	IA
2006	IA
2008	IA
2010	IA
2014	IA
2016	IA
2018	IA
1974	ID
1976	ID
1978	ID
1980	ID
1984	ID
1986	ID
1988	ID
1990	ID
1994	ID
1996	ID
1998	ID
2000	ID
2004	ID
2006	ID
2008	ID
2010	ID
2014	ID
2016	ID
2018	ID
1974	IL
1976	IL
1978	IL
1980	IL
1984	IL
1986	IL
1988	IL
1990	IL
1994	IL
1996	IL
1998	IL
2000	IL
2004	IL
2006	IL
2008	IL
2010	IL
2014	IL
2016	IL
2018	IL
1974	IN
1976	IN
1978	IN
1980	IN
1984	IN
1986	IN
1988	IN
1990	IN
1994	IN
1996	IN
1998	IN
2000	IN
2004	IN
2006	IN
2008	IN
2010	IN
2014	IN
2016	IN
2018	IN
1976	KS
1980	KS
1984	KS
1988	KS
1996	KS
2000	KS
2004	KS
2008	KS
2016	KS
2018	KS
1974	KY
1976	KY
1978	KY
1980	KY
1984	KY
1986	KY
1988	KY
1990	KY
1996	KY
1998	KY
2000	KY
2004	KY
2006	KY
2008	KY
2010	KY
2014	KY
2016	KY
2018	KY
1974	MD
1978	MD
1986	MD
1990	MD
1994	MD
1998	MD
2006	MD
2010	MD
2014	MD
2018	MD
1974	ME
1976	ME
1978	ME
1980	ME
1984	ME
1986	ME
1988	ME
1990	ME
1994	ME
1996	ME
1998	ME
2000	ME
2004	ME
2006	ME
2008	ME
2010	ME
2014	ME
2016	ME
2018	ME
1974	MI
1978	MI
1986	MI
1990	MI
1994	MI
1998	MI
2006	MI
2010	MI
2014	MI
2018	MI
1976	MN
1980	MN
1986	MN
1990	MN
1996	MN
2000	MN
2006	MN
2010	MN
2016	MN
2018	MN
1974	MO
1976	MO
1978	MO
1980	MO
1984	MO
1986	MO
1988	MO
1990	MO
1994	MO
1996	MO
1998	MO
2000	MO
2004	MO
2006	MO
2008	MO
2010	MO
2014	MO
2016	MO
2018	MO
1983	MS
1987	MS
1995	MS
1999	MS
2003	MS
2007	MS
1974	MT
1976	MT
1978	MT
1980	MT
1984	MT
1986	MT
1988	MT
1990	MT
1994	MT
1996	MT
1998	MT
2000	MT
2014	MT
2016	MT
2018	MT
1974	NC
1976	NC
1978	NC
1980	NC
1984	NC
1986	NC
1988	NC
1990	NC
1994	NC
1996	NC
1998	NC
2000	NC
2004	NC
2006	NC
2008	NC
2010	NC
2014	NC
2016	NC
2018	NC
1984	ND
1986	ND
1988	ND
1990	ND
1994	ND
1996	ND
1998	ND
2000	ND
2004	ND
2006	ND
2008	ND
2010	ND
2014	ND
2016	ND
2018	ND
1974	NH
1976	NH
1978	NH
1980	NH
1984	NH
1986	NH
1988	NH
1990	NH
1994	NH
1996	NH
1998	NH
2000	NH
2004	NH
2006	NH
2008	NH
2010	NH
2014	NH
2016	NH
2018	NH
1973	NJ
1977	NJ
1985	NJ
1989	NJ
1993	NJ
1997	NJ
2005	NJ
2009	NJ
2013	NJ
2017	NJ
1974	NM
1976	NM
1978	NM
1980	NM
1984	NM
1988	NM
1996	NM
2000	NM
2004	NM
2008	NM
2016	NM
2014	NV
2016	NV
2018	NV
1974	NY
1976	NY
1978	NY
1980	NY
1984	NY
1986	NY
1988	NY
1990	NY
1994	NY
1996	NY
1998	NY
2000	NY
2004	NY
2006	NY
2008	NY
2010	NY
2014	NY
2016	NY
2018	NY
1974	OH
1976	OH
1978	OH
1980	OH
1984	OH
1986	OH
1988	OH
1990	OH
1994	OH
1996	OH
1998	OH
2000	OH
2004	OH
2006	OH
2008	OH
2010	OH
2014	OH
2016	OH
2018	OH
1974	OK
1976	OK
1978	OK
1980	OK
1984	OK
1986	OK
1988	OK
1990	OK
1994	OK
1996	OK
1998	OK
2000	OK
2004	OK
2006	OK
2008	OK
2010	OK
2014	OK
2016	OK
2018	OK
1974	OR
1976	OR
1978	OR
1980	OR
1984	OR
1986	OR
1988	OR
1990	OR
1994	OR
1996	OR
1998	OR
2000	OR
2004	OR
2006	OR
2008	OR
2010	OR
2014	OR
2016	OR
2018	OR
1974	PA
1976	PA
1978	PA
1980	PA
1984	PA
1986	PA
1988	PA
1990	PA
1994	PA
1996	PA
1998	PA
2000	PA
2004	PA
2006	PA
2008	PA
2010	PA
2014	PA
2016	PA
2018	PA
1974	RI
1976	RI
1978	RI
1980	RI
1984	RI
1986	RI
1988	RI
1990	RI
1994	RI
1996	RI
1998	RI
2000	RI
2004	RI
2006	RI
2008	RI
2010	RI
2014	RI
2016	RI
2018	RI
1984	SC
1988	SC
1996	SC
2000	SC
2004	SC
2008	SC
2016	SC
1974	SD
1976	SD
1978	SD
1980	SD
1984	SD
1986	SD
1988	SD
1990	SD
1994	SD
1996	SD
1998	SD
2000	SD
2004	SD
2006	SD
2008	SD
2010	SD
2014	SD
2016	SD
2018	SD
1974	TN
1976	TN
1978	TN
1980	TN
1984	TN
1986	TN
1988	TN
1990	TN
1994	TN
1996	TN
1998	TN
2000	TN
2004	TN
2006	TN
2008	TN
2010	TN
2014	TN
2016	TN
2018	TN
1974	TX
1976	TX
1978	TX
1980	TX
1984	TX
1986	TX
1988	TX
1990	TX
1996	TX
1998	TX
2000	TX
2004	TX
2006	TX
2008	TX
2010	TX
2014	TX
2016	TX
2018	TX
1974	UT
1976	UT
1978	UT
1980	UT
1984	UT
1986	UT
1988	UT
1990	UT
1994	UT
1996	UT
1998	UT
2000	UT
2004	UT
2006	UT
2008	UT
2010	UT
2014	UT
2016	UT
2018	UT
1975	VA
1979	VA
1983	VA
1987	VA
1995	VA
1999	VA
2003	VA
2007	VA
2015	VA
1974	WA
1976	WA
1978	WA
1980	WA
1984	WA
1986	WA
1988	WA
1990	WA
1994	WA
1996	WA
1998	WA
2000	WA
2004	WA
2006	WA
2008	WA
2010	WA
2014	WA
2016	WA
2018	WA
1974	WI
1976	WI
1978	WI
1980	WI
1984	WI
1986	WI
1988	WI
1990	WI
1994	WI
1996	WI
1998	WI
2000	WI
2004	WI
2006	WI
2008	WI
2010	WI
2014	WI
2016	WI
2018	WI
1994	WY
1996	WY
1998	WY
2000	WY
2004	WY
2006	WY
2008	WY
2010	WY
2014	WY
2016	WY
2018	WY
'''

rows = csv.DictReader(io.StringIO(data), dialect='excel-tab')
rows = sorted(rows, key=lambda r: (r['stateabrev'], r['cycle']))

for (stateabrev, rows) in itertools.groupby(rows, operator.itemgetter('stateabrev')):
    #if stateabrev not in ('VA', 'NJ', 'CA', 'NC'):
    #    continue
    
    print('==>', stateabrev, file=sys.stderr)

    rows = list(rows)
    period = min([int(b['cycle']) - int(a['cycle']) for (a, b) in zip(rows, rows[1:])])

    seen = [2020]
    
    for row in reversed(rows):
        curr, prev = int(row['cycle']), seen[-1]
        possible = curr + period
        
        if (((curr - 1) % 10) > ((prev - 1) % 10) and possible != prev):
            print('-->', row, curr, prev, '--', possible, file=sys.stderr)
            print(f"'{possible}\t{stateabrev}")
        else:
            print('   ', row, curr, prev, file=sys.stderr)
        
        seen.append(curr)
        
    possible = curr - period

    print('-->', possible, curr, ((possible - 1) % 10) < ((curr - 1) % 10), file=sys.stderr) 
    
    if ((possible - 1) % 10) < ((curr - 1) % 10):
        print(f"'{possible}\t{stateabrev}")
